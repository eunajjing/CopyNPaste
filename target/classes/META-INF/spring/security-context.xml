<?xml version="1.0" encoding="UTF-8"?>
<!--
@Project : 
@File name : security-context.xml
@Date : 2018.10.06
@Author : 우나연
@Desc : security 설정 (시큐리티 db 직접 연결로 로그인, 비밀번호 암호화 )
-->		

<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:security="http://www.springframework.org/schema/security"
   xsi:schemaLocation="http://www.springframework.org/schema/beans 
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/security 
                http://www.springframework.org/schema/security/spring-security.xsd">
                
                
<security:http auto-config="true" use-expressions="true" > 
	<security:csrf disabled="true" />
    <security:form-login login-page="/login.htm" 
      					default-target-url="/index.htm"
      					authentication-failure-url="/login.htm?error"
      					username-parameter="userEmail" password-parameter="userPwd" 
      						/> 			
	<security:logout logout-success-url="/index.htm" 
					 invalidate-session ="true"/>	
	
	<security:intercept-url pattern="/login.htm" access="permitAll" />
	<security:intercept-url	pattern="/signup.htm" access="permitAll" />
	<security:intercept-url pattern="/admin/**"	access="hasRole('ROLE_ADMIN')" />
		
	<security:session-management invalid-session-url="/login.htm">
			<security:concurrency-control
				max-sessions="1" error-if-maximum-exceeded="true" />
	</security:session-management>
</security:http>

<security:authentication-manager>
	<security:authentication-provider>
		<!-- db연결객체 참조 -->
		<security:jdbc-user-service data-source-ref="dataSource"
			users-by-username-query="select userEmail, userPwd, 1 enabled from users where userEmail=?"
			authorities-by-username-query="select u.userEmail, r.rollCode 
											from users as u 
											join rolls as r 
											on u.userEmail = r.userEmail 
											where u.userEmail=?" />
         
			<!-- 패스워드 인코더  -->
			<!-- <security:password-encoder ref="bCryptPasswordEncoder"/> -->
		</security:authentication-provider>
</security:authentication-manager>

<!-- 비밀번호 암호화(Security) -->
<!-- 	<bean id="bCryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<constructor-arg name="strength" value="20"></constructor-arg>
	</bean> -->
	<bean name="jsonview" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
	

</beans>

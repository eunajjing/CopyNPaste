<?xml version="1.0" encoding="UTF-8"?>
<!-- @Project : @File name : etc.xml @Date : 2018.10.17 @Author : 고은아 @Desc 
	: etc dao 매퍼 쿼리문 작성. -->		

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="tk.copyNpaste.mapper.EtcMapper">

	<!-- 신고 처리 -->
	<insert id="insertReport" parameterType="ReportVO">
		<selectKey keyProperty="reportNum" order="BEFORE" resultType="int">
			select max(reportNum)+1 from report
		</selectKey>
		insert into report(reportNum, userEmail, noteNum, reportCauseCode, reportContent, noteOrCommCode)
		values(#{reportNum}, #{userEmail}, #{noteNum}, #{reportCauseCode}, #{reportContent}, #{noteOrCommCode} )
	</insert>

	<!-- 주제에 맞게 노트 개수 가지고 온다 -->
	<select id="stateNoteSubject" resultType="EtcVO">
		select c.subjectName
		subjectxAxis, count(n.subjectCode) subjectyAxis
		from subject c left
		outer join note n
		on c.subjectCode=n.subjectCode
		group by c.subjectName
	</select>

	<!-- 회원 가입 수를 가지고 온다 -->
	<select id="stateMember" resultType="EtcVO">
		select date_format(userDate,
		'%Y-%m') as memberxAxis, count(*) memberyAxis
		from users
		where userDate
		between DATE_ADD(NOW(),INTERVAL -6 MONTH ) and now()
		group by
		date_format(userDate, '%Y-%m')
	</select>

	<!-- 신고한 것들을 데리고 온다 -->
	<select id="selectAllReport" resultType="ReportVO">
		select reportNum, userEmail, noteNum, checkCode, reportInDate,
		reportCauseCode, reportContent, reportmemo, noteOrCommCode
		from report
		order by checkCode desc, noteOrCommCode, noteNum, reportNum
	</select>

	<!-- 노트 신고한 것들을 데리고 온다 -->
	<select id="selectNoteReport" resultType="ReportVO">
		select reportNum, userEmail, noteNum, checkCode, reportInDate,
		reportCauseCode, reportContent, reportmemo, noteOrCommCode
		from report where noteOrCommCode='NC00'
		order by checkCode desc, noteNum, reportNum
	</select>

	<!-- 댓글 신고한 것들을 데리고 온다 -->
	<select id="selectCommReport" resultType="ReportVO">
		select reportNum, userEmail, noteNum, checkCode, reportInDate,
		reportCauseCode, reportContent, reportmemo, noteOrCommCode
		from report where noteOrCommCode='NC01'
		order by checkCode desc, noteNum, reportNum
	</select>

	<!-- 신고를 관리자가 처리한다. -->
	<update id="updateReport">
		update report set reportmemo = #{param2, jdbcType=VARCHAR}, checkCode =
		#{param3}
		where reportNum = #{param1}
	</update>

	<!-- 신고 받은 노트를 블라인드 시킨다. -->
	<update id="updateReportNoteBlind">
		update note set noteBlind = 1 where noteNum = #{noteNum}
	</update>

	<!-- 신고 받은 댓글을 블라인드 시킨다. -->
	<update id="updateReportNoteCommBlind">
		update notecomm set noteCommBlind= 1 where noteCommNum = #{noteNum}
	</update>

	<!-- 노트 블라인드를 해제한다. -->
	<update id="updateReportNoteDontBlind">
		update note set noteBlind = 0 where noteNum = #{noteNum}
	</update>

	<!-- 댓글 블라인드를 해제한다. -->
	<update id="updateReportNoteCommDontBlind">
		update notecomm set noteCommBlind = 0 where noteCommNum = #{noteNum}
	</update>
	
	<select id="selectHasReportComm" resultType="int">
		select noteNum from notecomm where noteNum =#{reportNum}
	</select>

</mapper>














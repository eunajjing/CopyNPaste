<?xml version="1.0" encoding="UTF-8"?>
<!-- @Project : @File name : etc.xml @Date : 2018.10.17 @Author : 고은아 @Desc 
	: etc dao 매퍼 쿼리문 작성. -->		

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="tk.copyNpaste.mapper.EtcMapper">
	
	<!-- 알림 체크  -->
	<update id="notifyReadCheck">
		update notify set readCheck=0
		where userEmail = #{param1} and notifyCode = #{param2} and notifyTarget = #{param3}
	</update>
	
	<!-- 알림 리스트 가지고 오기 -->
	<select id="noticeList" resultType="noticeVO">
		select notifyCode, notifyTarget, readCheck, notifyTitle from 
   			(select n.notifyCode, n.notifyTarget, n.readCheck,
   					note.noteTitle notifyTitle, n.notifyDate
			from notify n join note on (n.notifyTarget = note.noteNum)
			where n.userEmail = #{userEmail} and n.notifyCode in ('NC', 'NCC')
			union
			select n.notifyCode, n.notifyTarget, n.readCheck,
			q.qnaTitle notifyTitle, n.notifyDate
			from notify n join qna q on (n.notifyTarget = q.qnaNum)
			where n.userEmail = #{userEmail} and n.notifyCode in ('QA', 'QC', 'QCC')) notify
		order by readCheck desc, notifyDate desc limit 0, 5
	</select>
	
	<!-- 알림 개수 가지고 오기 -->
	<select id="countNotify" resultType="int">
		select count(*) from notify where userEmail=#{userEmail} and readCheck=1
	</select>

	<!-- 신고하기 -->
	<insert id="insertReport" parameterType="ReportVO">
		<selectKey keyProperty="reportNum" order="BEFORE"
			resultType="int">
			select ifnull(max(reportNum)+1,0) from report
		</selectKey>
		insert into report
		(reportNum, userEmail, noteNum, reportCauseCode,
		reportContent, noteOrCommCode, reportmemo, noteCommNum)
		values
		(#{reportNum},#{userEmail}, #{noteNum}, #{reportCauseCode}, 
		#{reportContent},#{noteOrCommCode}," ", #{noteCommNum})
	</insert>

	<!-- 통계 : 노트주제 -->
	<select id="stateNoteSubject" resultType="EtcVO">
		select c.subjectName
		subjectxAxis, count(n.subjectCode) subjectyAxis
		from subject c left
		outer join note n
		on c.subjectCode=n.subjectCode
		group by c.subjectName
	</select>

	<!-- 통계 : 월별 회원가입수 -->
	<select id="stateMember" resultType="EtcVO">
		select date_format(userDate,
		'%Y-%m') as memberxAxis, count(*) memberyAxis
		from users
		where userDate
		between DATE_ADD(NOW(),INTERVAL -6 MONTH ) and now()
		group by
		date_format(userDate, '%Y-%m')
	</select>
	
	<!-- 유형별 회원 가입 수를 가지고 온다 -->
	<select id="stateJoinMember" resultType="EtcVO">
		select userSocialStatus joinMemberxAxis, count(userSocialStatus) joinMemberyAxis from users group by userSocialStatus;
	
	</select>

	<!-- 워드클라우드 -->
	<select id="wordchart" resultType="String">
		select noteContent 
		from note
		where noteDate=curdate() and noteBlind=0 and notePublic=1 and noteScrap=0
		order by noteContent desc limit 10;
	</select>

	<!-- 신고 목록 -->
	<select id="selectAllReport" resultType="ReportVO">
		select r.reportNum, r.userEmail, r.noteNum, r.checkCode, r.reportInDate, r.reportCauseCode,
		r.reportContent, r.reportmemo, r.noteOrCommCode, r.noteCommNum
		from report r 
		order by checkCode desc, noteOrCommCode, noteNum, reportNum
	</select>

	<!-- 노트 신고목록 -->
	<select id="selectNoteReport" resultType="ReportVO">
		select reportNum,userEmail, noteNum, checkCode, reportInDate,
		reportCauseCode,reportContent, reportmemo, noteOrCommCode
		from report where
		noteOrCommCode='NC00'
		order by checkCode desc, noteNum, reportNum
	</select>

	<!-- 댓글 신고목록 -->
	<select id="selectCommReport" resultType="ReportVO">
		select reportNum,userEmail, noteNum, checkCode, reportInDate,
		reportCauseCode,reportContent, reportmemo, noteOrCommCode
		from report where
		noteOrCommCode='NC01'
		order by checkCode desc, noteNum, reportNum
	</select>

	<!-- 신고 처리 -->
	<update id="updateReport">
		update report 
			SET reportmemo=#{reportmemo},
				checkCode=#{checkCode}
		  WHERE reportNum=#{reportNum}
	</update>

	<!-- 노트 블라인드처리 -->
	<update id="updateReportNoteBlind">
		update note 
		   set noteBlind = 1
		 where noteNum = #{noteNum}
	</update>

	<!-- 노트댓글 블라인드처리 -->
	<update id="updateReportNoteCommBlind">
		update notecomm set noteCommBlind=1 where
		noteCommNum = #{noteCommNum}
	</update>

	<!-- 노트 블라인드 해제 -->
	<update id="updateReportNoteDontBlind">
		update note set noteBlind = 0 where noteNum =
		#{noteNum}
	</update>

	<!-- 댓글 블라인드 해제 -->
	<update id="updateReportNoteCommDontBlind">
		update notecomm set noteCommBlind = 0 where
		noteCommNum = #{noteNum}
	</update>
	<!-- 신고댓글있는지 조회 -->
	<select id="selectHasReportComm" resultType="int">
		select noteNum from
		notecomm where noteNum =#{reportNum}
	</select>

	<!-- 사이트 내 검색 -->
	<select id="selectSearchSite" parameterType="hashmap" resultType="NoteVO">
		select n.noteNum, n.folderName, n.userEmail, n.noteTitle,
		n.noteContent, n.noteDate, u.userNick,
		n.subjectCode,s.subjectName, n.noteCount,
		n.notePublic, n.notescrap, n.notePNum, n.noteThumnail
		from note n join subject s on s.subjectCode=n.subjectCode
					join users u on u.userEmail=n.userEmail
		<where>
			<choose>
				<when test="boundary.equals('제목')">
					<choose>
						<when test="subjectCategory.equals('all')">
							n.noteTitle like CONCAT('%',#{keyword},'%')
						</when>
						<otherwise>
							s.subjectName = #{subjectCategory} and (n.noteTitle
							like
							CONCAT('%',#{keyword},'%'))
						</otherwise>
					</choose>
				</when>
				<when test="boundary.equals('내용')">
					<choose>
						<when test="subjectCategory.equals('all')">
							n.noteContent like CONCAT('%',#{keyword},'%')
						</when>
						<otherwise>
							s.subjectName = #{subjectCategory} and (n.noteContent
							like
							CONCAT('%',#{keyword},'%'))
						</otherwise>
					</choose>
				</when>
				<otherwise>
					<choose>
						<when test="subjectCategory.equals('all')">
							n.noteTitle like CONCAT('%',#{keyword},'%') or n.noteContent like CONCAT('%',#{keyword},'%')
						</when>
						<otherwise>
							s.subjectName = #{subjectCategory} and (n.noteTitle like
							CONCAT('%',#{keyword},'%') or n.noteContent like CONCAT('%',#{keyword},'%'))
						</otherwise>
					</choose>
				</otherwise>
			</choose>
			and n.notePublic=1 and n.noteBlind=0 and n.notescrap=0<!-- 공개1 블라인드0 스크랩글 아닌것0-->
		</where>
		order by noteNum desc limit ${page},12
	</select>
	
	<!-- 노트 작성 페이지 >> 사이트 내 검색 -->
	<select id="selectSearchSiteWrite" parameterType="hashmap" resultType="NoteVO">
	select n.noteNum, n.folderName, n.userEmail, n.noteTitle, n.noteContent, n.noteDate,
	n.subjectCode,s.subjectName, n.noteCount, n.notePublic, n.notescrap, n.notePNum, n.noteThumnail, u.userNick
	from note n join users u on u.userEmail=n.userEmail 
				join subject s on s.subjectCode=n.subjectCode 
	where (n.noteTitle like CONCAT('%',#{keyword},'%') or 
		   n.noteContent like CONCAT('%',#{keyword},'%') ) and 
		   n.notePublic=1 and n.noteBlind=0 and n.notescrap=0<!-- 공개1 블라인드0 스크랩글 아닌것0-->
				order by noteNum desc		
				
	</select>

	<!-- 자동완성 키워드 검색 (노트제목)-->
	<select id="collectSearchKeywords" resultType="NoteVO">
		select n.noteTitle, s.subjectName
		from note n join subject s on s.subjectCode=n.subjectCode
		where s.subjectName= #{subjectName}
		and n.notePublic=1 and n.noteBlind=0 and n.notescrap=0<!-- 공개1 블라인드0 스크랩글 아닌것0-->
		order by binary(n.noteTitle)
	</select>



</mapper>













